name: Java CI

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/*.docx'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 21 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.java-version }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ matrix.java-version }}-

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java-version }}

      - name: Cache Maven dependencies
        run: mvn dependency:go-offline

      - name: Set up Maven settings
        run: echo "${{ secrets.MAVEN_SETTINGS }}" > $HOME/.m2/settings.xml

      - name: Build with Maven
        run: mvn -B package --file pom.xml

  static-analysis:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-21-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-21-

      - name: Set up Maven settings
        run: echo "${{ secrets.MAVEN_SETTINGS }}" > $HOME/.m2/settings.xml

      - name: Run Checkstyle
        run: mvn checkstyle:check

      - name: Run SpotBugs
        run: mvn spotbugs:check

      - name: Run OWASP Dependency Check
        run: mvn dependency-check:check

      - name: Check for Dependency Updates
        run: mvn versions:display-dependency-updates

  integration-tests:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        java-version: [ 8, 11, 17, 21 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java-version }}

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.java-version }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ matrix.java-version }}-

      - name: Set up Maven settings
        run: echo "${{ secrets.MAVEN_SETTINGS }}" > $HOME/.m2/settings.xml

      - name: Run Integration Tests
        run: mvn failsafe:integration-test failsafe:verify

  report:
    runs-on: ubuntu-latest
    needs: [ static-analysis, integration-tests ]

    steps:
      - name: Generate Report
        run: echo "All checks completed"
